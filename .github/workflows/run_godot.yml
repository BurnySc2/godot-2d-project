name: Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 1
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.7]
        godot-version: [3.2.2]

    steps:
      - uses: actions/checkout@v1

      - name: Debug print
        run: |
          sudo apt-get install tree
          tree
        if: matrix.os == 'ubuntu-latest'


      - name: Download Godot (Linux)
        run: |
          wget https://downloads.tuxfamily.org/godotengine/${{ matrix.godot-version }}/Godot_v${{ matrix.godot-version }}-stable_linux_headless.64.zip
          unzip Godot_v${{ matrix.godot-version }}-stable_linux_headless.64.zip
          rm Godot_v${{ matrix.godot-version }}-stable_linux_headless.64.zip
          mv Godot_v${{ matrix.godot-version }}-stable_linux_headless.64 godot
        if: matrix.os == 'ubuntu-latest'

      - name: Download Godot (macOS)
        run: |
          wget https://downloads.tuxfamily.org/godotengine/${{ matrix.godot-version }}/Godot_v${{ matrix.godot-version }}-stable_osx.64.zip
          unzip Godot_v${{ matrix.godot-version }}-stable_osx.64.zip
          rm Godot_v${{ matrix.godot-version }}-stable_osx.64.zip
          mv Godot.app/Contents/MacOS/Godot godot
        if: matrix.os == 'macos-latest'

      - name: Download Godot (Windows)
        run: |
          curl https://downloads.tuxfamily.org/godotengine/${{ matrix.godot-version }}/Godot_v${{ matrix.godot-version }}-stable_win64.exe.zip -O Godot_v${{ matrix.godot-version }}-stable_win64.exe.zip
          dir
          unzip Godot_v${{ matrix.godot-version }}-stable_win64.exe.zip
          rm Godot_v${{ matrix.godot-version }}-stable_win64.exe.zip
          move Godot_v${{ matrix.godot-version }}-stable_win64.exe godot.exe
        if: matrix.os == 'windows-latest'

      - name: Run Godot Tests
        # The -d option tells Godot to run in debug mode which is helpful. The -s option tells Godot to run a script. --path $PWD tells Godot to treat the current directory as the root of a project.
        # When running from command line, 0 will be returned if all tests pass and 1 will be returned if any fail (pending doesn't affect the return value).
        # To run a single test:
        # ./godot -d -s --path $PWD addons/gut/gut_cmdln.gd -gselect=test_example.gd
        run: |
          ./godot -d -s --path $PWD addons/gut/gut_cmdln.gd
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

      - name: Run Godot Tests (Windows)
        run: |
          ./godot.exe -d -s --path $PWD addons/gut/gut_cmdln.gd
        if: matrix.os == 'windows-latest'
